<?php

namespace Console\Libraries;

use QL\QueryList;
use GuzzleHttp\Psr7\Response;
use Mix\Concurrent\CoroutinePool\AbstractWorker;
use Mix\Concurrent\CoroutinePool\WorkerInterface;

/**
 * Class CoroutinePoolStockWorker
 * @package Daemon\Libraries
 * @author alex <alexgaozhongze@gmail.com>
 */
class CoroutinePoolStockWorker extends AbstractWorker implements WorkerInterface
{
    private static $code_times=[];

    /**
     * 初始化事件
     */
    public function onInitialize()
    {
        parent::onInitialize(); // TODO: Change the autogenerated stub
        // 实例化一些需重用的对象
        // ...

        $connection=app()->dbPool->getConnection();
        $table_name = "fscj_" . date('Ymd');
        $sql = "CREATE TABLE IF NOT EXISTS `$table_name` (
            `code` mediumint(6) unsigned zerofill NOT NULL,
            `price` float(5,2) DEFAULT NULL,
            `up` float(5,2) DEFAULT NULL,
            `num` int(11) DEFAULT NULL,
            `bs` tinyint(4) NOT NULL,
            `ud` tinyint(4) NOT NULL,
            `time` time NOT NULL,
            `type` tinyint(4) NOT NULL,
            PRIMARY KEY (`code`,`type`,`time`)
            ) ENGINE=InnoDB DEFAULT CHARSET=utf8";
        $connection->createCommand($sql)->execute();
    }

    /**
     * 处理
     * @param $data
     */
    public function handle($data)
    {
        list($microstamp, $timestamp) = explode(' ', microtime());
        $timestamp = "$timestamp" . intval($microstamp * 1000);

        $ql = QueryList::get("http://nufm.dfcfw.com/EM_Finance2014NumericApplication/JS.aspx?type=ct&st=(ChangePercent)&sr=-1&p=1&ps=1&js={%22pages%22:(pc),%22data%22:[(x)]}&token=894050c76af8597a853f5b408b759f5d&cmd=C._AB&sty=DCFFITA&rt=$timestamp");

        $json_data = $ql->getHtml();
        if (!$json_data) return false;

        $data = json_decode($json_data, true);
        $pages = $data['pages'];

        $page_total = ceil($pages / 50);
        $urls = [];
        for ($i = 1; $i <= $page_total; $i ++) {
            $urls[] = "http://nufm.dfcfw.com/EM_Finance2014NumericApplication/JS.aspx?type=ct&st=(ChangePercent)&sr=-1&p=$i&ps=50&js={%22pages%22:(pc),%22data%22:[(x)]}&token=894050c76af8597a853f5b408b759f5d&cmd=C._AB&sty=DCFFITA&rt=$timestamp";
        }

        $connection=app()->dbPool->getConnection();
        $fscj_table_name = "fscj_" . date('Ymd');
        $sql = "SELECT `code`, COUNT(1) AS count FROM `$fscj_table_name` GROUP BY `code`";
        $list = $connection->createCommand($sql)->queryAll();
        self::$code_times = $list ? array_column($list, 'count', 'code') : [];

        self::syncZjlx($urls);
    }

    private function syncZjlx($urls)
    {
        QueryList::multiGet($urls)
            ->concurrency(8)
            ->withOptions([
                'timeout' => 3
            ])
            ->success(function(QueryList $ql,Response $response, $index) use($urls){
                $json_data = $ql->getHtml();
                $connection=app()->dbPool->getConnection();
                $date = date('Y-m-d');

                $data = json_decode($json_data, true);
                $datas = $data['data'];

                $sql_fields = "INSERT INTO `zjlx` (`code`, `price`, `up`, `mar`, `mai`, `sur`, `sui`, `bir`, `bii`, `mir`, `mii`, `smr`, `smi`, `date`, `name`, `type`) VALUES ";
                $sql_values = "";

                array_walk($datas, function($item) use(&$sql_values) {
                    $item = str_replace('-,', 'NULL,', $item);
                    $sql_values && $sql_values .= ',';

                    list($type, $code, $name, $price, $up, $mai, $mar, $sui, $sur, $bii, $bir, $mii, $mir, $smi, $smr, $date_time) = explode(',', $item);
                    $date = date('Y-m-d', strtotime($date_time));

                    $sql_values .= "('$code', $price, $up, $mar, $mai, $sur, $sui, $bir, $bii, $mir, $mii, $smr, $smi, '$date', '$name', $type)";
                    !isset(self::$code_times[$code . $type]) && self::$code_times[$code . $type] = 0;
                });

                $sql_values .= " ON DUPLICATE KEY UPDATE `price`=VALUES(`price`), `up`=VALUES(`up`), `mar`=VALUES(`mar`), `mai`=VALUES(`mai`), `sur`=VALUES(`sur`), `sui`=VALUES(`sui`), `bir`=VALUES(`bir`), `bii`=VALUES(`bii`), `mir`=VALUES(`mir`), `mii`=VALUES(`mii`), `smr`=VALUES(`smr`), `smi`=VALUES(`smi`);";

                $sql = $sql_fields . $sql_values;
                $connection->createCommand($sql)->execute();
            })->error(function (QueryList $ql, $reason, $index){
                // ...
            })->send();

        self::syncFscj();
    }

    private function syncFscj()
    {
        list($microstamp, $timestamp) = explode(' ', microtime());
        $timestamp = "$timestamp" . intval($microstamp * 1000);

        $urls = $url_keys = [];
        array_walk(self::$code_times, function($item, $key) use (&$urls, &$url_keys, $timestamp) {
            $page_size = 100;
            $page = ceil(($item + 1) / $page_size);

            $urls[] = "http://mdfm.eastmoney.com/EM_UBG_MinuteApi/Js/Get?dtype=all&token=44c9d251add88e27b65ed86506f6e5da&rows=$page_size&page=$page&id=$key&gtvolume=&sort=asc&_=$timestamp&js={%22data%22:(x)}";
            $url_keys[] = $key;
        });

        QueryList::multiGet($urls)
        ->concurrency(8)
        ->withOptions([
            'timeout' => 3
        ])
        ->success(function(QueryList $ql,Response $response, $index) use($url_keys){
            $json_data = $ql->getHtml();
            if ($json_data) {
                $connection=app()->dbPool->getConnection();
                $table_name = "fscj_" . date('Ymd');

                $data = json_decode($json_data, true);
                $datas = $data['data']['value']['data'] ?? [];
                $pc = $data['data']['value']['pc'] ?? 0;

                $sql_fields = "INSERT IGNORE INTO `$table_name` (`code`, `price`, `up`, `num`, `bs`, `ud`, `time`, `type`) VALUES ";
                $sql_values = "";
                $count = 0;

                array_walk($datas, function($item) use (&$sql_values, &$count, $pc, $url_keys, $index) {
                    $count ++;
                    list($time, $price, $num, $bs, $ud) = explode(',', $item);
			        $sql_values && $sql_values .= ',';
                    $up = bcmul(bcdiv(bcsub($price, $pc, 2), $pc, 4), 100, 2);
                    $code = substr($url_keys[$index], 0, 6);
                    $type = substr($url_keys[$index], 6, 1);
                    $sql_values .= "('$code', $price, $up, $num, $bs, $ud, '$time', $type)";
                });

                if ($sql_values) {
                    $sql = $sql_fields . $sql_values;
                    $connection->createCommand($sql)->execute();
                }
            }
        })->error(function (QueryList $ql, $reason, $index){
            // ...
        })->send();
    }

}
